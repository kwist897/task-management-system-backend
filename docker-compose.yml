services:
  userpostgres:
    container_name: userpostgres
    image: postgres:14.2-bullseye
    restart: always
    ports:
      - 8089:5432
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./docker/init-userdb.sql:/docker-entrypoint-initdb.d/1-init.sql
      - db-data:/data/postgres
    networks:
      - databases
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 10
#  keycloak:
#    container_name: keycloak
#    image: jboss/keycloak:16.1.1
#    restart: always
#    ports:
#      - 8080:8080
#    environment:
#      KEYCLOAK_USER: ${ADMIN_USER}
#      KEYCLOAK_PASSWORD: ${ADMIN_PASSWORD}
#      DB_VENDOR: postgres
#      DB_ADDR: ${USER_DATABASE_URL}
#      DB_USER: ${DATABASE_USERNAME}
#      DB_PASSWORD: ${DATABASE_PASSWORD}
#    networks:
#      microservices:
#        aliases:
#          - keycloak
#      databases:
#    depends_on:
#      userpostgres:
#        condition: service_healthy
#    volumes:
#      - ./docker/realm-export.json:/opt/jboss/keycloak/realm-export.json
#    command:
#      - "-b 0.0.0.0"
#      - "-Dkeycloak.import=/opt/jboss/keycloak/realm-export.json"

  config:
    container_name: config
    image: kwist/config-service:latest
    restart: unless-stopped
    ports:
      - 8090:8090
    environment:
      EUREKA_URL: ${EUREKA_URL}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "curl", "-f", "http://config:8090/actuator/health"]
      retries: 10
      timeout: 5s
      interval: 10s

  eureka:
    container_name: eureka
    image: kwist/discovery:latest
    restart: unless-stopped
    ports:
      - 8091:8091
    environment:
      CONFIG_URL: ${CONFIG_URL}
      EUREKA_URL: ${EUREKA_URL}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    depends_on:
      config:
        condition: service_healthy
    networks:
      - microservices
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka:8091/actuator/health" ]
      retries: 5
      timeout: 5s
      interval: 10s

  gateway:
    container_name: gateway
    image: kwist/gateway:latest
    restart: unless-stopped
    ports:
      - 8092:8092
    environment:
      EUREKA_URL: ${EUREKA_URL}
      CONFIG_URL: ${CONFIG_URL}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
    networks:
      - microservices

  account-service:
    container_name: auth-service
    image: kwist/auth-service:latest
    restart: unless-stopped
    ports:
      - 8093:8093
    environment:
      EUREKA_URL: ${EUREKA_URL}
      CONFIG_URL: ${CONFIG_URL}
      ADMIN_USER: ${ADMIN_USER}
      KEYCLOAK_URL: ${KEYCLOAK_URL}
      ACCOUNT_SERVICE_URL: $AUTH_SERVICE_URL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      USER_DATABASE_URL: ${USER_DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
      userpostgres:
        condition: service_healthy
    networks:
      - microservices
      - databases

networks:
  microservices:
    driver: bridge
  databases:
    driver: bridge

volumes:
  microservices:
  db-data: