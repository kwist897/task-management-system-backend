services:
  userpostgres:
    container_name: userpostgres
    image: postgres:14.2-bullseye
    restart: always
    ports:
      - 8089:5432
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./docker/init-userdb.sql:/docker-entrypoint-initdb.d/1-init.sql
      - db-data:/data/postgres
    networks:
      - databases
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 10

  config:
    container_name: config
    image: kwist/config-service:latest
    restart: unless-stopped
    ports:
      - 8090:8090
    environment:
      EUREKA_URL: ${EUREKA_URL}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "curl", "-f", "http://config:8090/actuator/health"]
      retries: 10
      timeout: 5s
      interval: 10s

  eureka:
    container_name: eureka
    image: kwist/discovery:latest
    restart: unless-stopped
    ports:
      - 8091:8091
    environment:
      CONFIG_URL: ${CONFIG_URL}
      EUREKA_URL: ${EUREKA_URL}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    depends_on:
      config:
        condition: service_healthy
    networks:
      - microservices
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka:8091/actuator/health" ]
      retries: 5
      timeout: 5s
      interval: 10s

  gateway:
    container_name: gateway
    image: kwist/gateway:latest
    restart: unless-stopped
    ports:
      - 8092:8092
    environment:
      EUREKA_URL: ${EUREKA_URL}
      CONFIG_URL: ${CONFIG_URL}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
    networks:
      - microservices

  auth-service:
    container_name: auth-service
    image: kwist/auth-service:latest
    restart: unless-stopped
    ports:
      - 8093:8093
    environment:
      EUREKA_URL: ${EUREKA_URL}
      CONFIG_URL: ${CONFIG_URL}
      ADMIN_USER: ${ADMIN_USER}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      USER_DATABASE_URL: ${USER_DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
      userpostgres:
        condition: service_healthy
    networks:
      - microservices
      - databases

  user-service:
    container_name: user-service
    image: kwist/user-service:latest
    restart: unless-stopped
    ports:
      - 8094:8094
    environment:
      EUREKA_URL: ${EUREKA_URL}
      CONFIG_URL: ${CONFIG_URL}
      ADMIN_USER: ${ADMIN_USER}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      USER_DATABASE_URL: ${USER_DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
      userpostgres:
        condition: service_healthy
    networks:
      - microservices
      - databases

networks:
  microservices:
    driver: bridge
  databases:
    driver: bridge

volumes:
  microservices:
  db-data: